from ggame import App, LineStyle, CircleAsset, RectangleAsset, Sprite, Color

black = Color(0x000000, 1.0)
thinline = LineStyle(0,black)

class pong(App):
    def __init__(self):
        super().__init__()
        Sprite(RectangleAsset(500,5,thinline,black), (0,0))
        Sprite(RectangleAsset(5,500,thinline,black), (500,0))
        Sprite(RectangleAsset(500,5,thinline,black), (0,495))
        Sprite(RectangleAsset(5,500,thinline,black), (0,0))
        paddle1((470,0))
        paddle2((10,0))
        ball((250,250))
        
    def step(self):
        self.getSpritesbyClass(ball)[0].step()
        
class paddle(Sprite):
    def __init__(self, asset, position):
        super().__init__(asset, position)
        self.fxcenter = self.fycenter = 0.5
    def moveUp(self,event):
        if self.y>0:
            self.y-=10
    def moveDown(self,event):
        if self.y<400:
            self.y+=10
class paddle1(paddle):
    asset=RectangleAsset(25,100,thinline,black)
    def __init__(self, position):
        super().__init__(paddle1.asset, position)
        pong.listenKeyEvent('keydown', 'up arrow', self.moveUp)
        pong.listenKeyEvent('keydown', 'down arrow', self.moveDown)
class paddle2(paddle):
    asset=RectangleAsset(25,100,thinline,black)
    def __init__(self, position):
        super().__init__(paddle1.asset, position)
        pong.listenKeyEvent('keydown', 'w', self.moveUp)
        pong.listenKeyEvent('keydown', 's', self.moveDown)

class ball(Sprite):
    asset=CircleAsset(25,thinline,black)
    def __init__(self, position):
        super().__init__(ball.asset, position)
        self.v = (1,1)
    def step(self):
        self.x += self.v[0]
        self.y += self.v[1]
        if self.y<=0 or self.y >= 475:
            self.v[1]*=-1
        if self.x<=0 or self.x >= 475:
            self.destroy()
    

        

        
pong().run()

